Some notes previously attached to:

`util.set_mseed_time_correction`

See `tests_and_verifications/mseed_fixed_section_data_header.py` for a
discussion of the fixed header and subsequent blockettes (e.g., 1001, 1000)
that (seem to?) precede every record an mseed file written by ObsPy v1.2.1.

miniSEED convention:

[1] record start + time correction = corrected record start
[2]  (mer_time)  +  (clockdrift)   =      (gps_time)

VERIFIED: POSITIVE time correction ADVANCES corrected record start if "Time
Correction Applied" bit unset; this is opposite the "time correction" of
decimation blockette [57] which shifts a start time backwards in time.

MERMAID convention:

[3] clockdrift = gps_time - mer_time
[4] mer_time + clockdrift = gps_time = eq. [2]

MERMAID's (automaid's) clockdrift and miniSEED's time correction are of the same sign.
miniSEED's time correction seems to be the opposite sign of that used in blockette [57].

Assuming we want time "delay" and "correction" to be opposing signs...

positive time correction = record (MER) time EARLY w.r.t. truth (GPS)
==> (+) time correction = (-) MER delay

negative time correction = record (MER) time DELAYED w.r.t. truth (GPS)
==> (-) time correction = (+) MER delay

Toggle `time_correction` flag between True and False and use:

$ `libmseed/example/mseedview -p  <mseed_filename>`
$ `python -m obspy.io.mseed.scripts.recordanalyzer -a <mseed_filename>`

to convince yourself of this.

Ultimately, for GeoCSV:

"Time delay" --> the magnitude of the clockdrift reported in the .LOG and .MER, opposite sign
       = -1*clockdrift
       = mer_time - gps_time (measured)

"Time correction" --> some percentage of the clockdrift, same sign
       = corrected_mer_time - mer_time (interpolated)
