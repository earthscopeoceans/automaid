diff --git a/scripts/main.py b/scripts/main.py
index 90f3717..75ff7ea 100644
--- a/scripts/main.py
+++ b/scripts/main.py
@@ -4,7 +4,7 @@
 # Original author: Sebastien Bonnieux
 # Current maintainer: Dr. Joel D. Simon (JDS)
 # Contact: jdsimon@alumni.princeton.edu | joeldsimon@gmail.com
-# Last modified by JDS: 14-Oct-2020, Python 2.7.15, Darwin-18.7.0-x86_64-i386-64bit
+# Last modified by JDS: 16-Oct-2020, Python 2.7.15, Darwin-18.7.0-x86_64-i386-64bit
 
 import setup
 import os
@@ -196,23 +196,17 @@ def main():
             vitals.plot_corrected_pressure_offset(mfloat_path, mdives, begin, end)
 
 
-        # Collect, sort, and write to all GPS points recorded in both the .LOG
-        # and .MER files (flatten function posted by Alex Martelli on stack
-        # overflow, "How to make a flat list out of list of lists?")
-        flatten = lambda l: [item for sublist in l for item in sublist]
-        gps_list_from_log = flatten([dive.gps_from_log for dive in mdives])
-        gps_list_from_mmd_env = flatten([dive.gps_from_mmd_env for dive in mdives])
-
-        # Concatenate lists from both sources (resulting in unsorted list)
-        gps_list_full = gps_list_from_log +  gps_list_from_mmd_env
-
-        # Sort the full GPS list using their date attributes
+        # Concatenate all GPS fixes from every .LOG and .MER for every dive
+        gps_list_full = [g for d in mdives for g in d.gps_list]
         gps_list_full.sort(key=lambda x: x.date)
 
         # Write GPS text file
         fmt_spec = "{:>27s}    {:>10.6f}    {:>11.6f}    {:>6.3f}    {:>6.3f}    {:>17.6f}    {:>15s}\n"
         gps_f = os.path.join(processed_path, mfloat_path, mfloat+"_GPS.txt")
         with open(gps_f, "w+") as f:
+            f.write("MERMAID: {:s}\n".format(mfloat))
+            f.write("COLUMN:                   1             2              3         4         5                    6                  7\n".format())
+            f.write("DESCRIPTION:       GPS_TIME       GPS_LAT        GPS_LON  GPS_HDOP  GPS_VDOP    GPS_TIME-MER_TIME             SOURCE\n".format())
             for g in gps_list_full:
                 # Replace missing hdop/vdop (not printed in .MER files) values
                 # with NaNs for printing purposes (those attributes will remain
@@ -239,8 +233,8 @@ def main():
             d.print_dive_events()
             print ""
 
-        print("    {:s} total: {:d} SAC files\n" \
-              .format(mfloat_serial, sum(dive.sac_count for dive in mdives)))
+        print("    {:s} total: {:d} SAC & miniSEED files\n" \
+              .format(mfloat_serial, sum(e.can_generate_sac for d in mdives for e in d.events)))
 
         # Clean directories
         for f in glob.glob(mfloat_path + "/" + mfloat_nb + "_*.LOG"):
