diff --git a/scripts/events.py b/scripts/events.py
index 87414be..56bff7e 100644
--- a/scripts/events.py
+++ b/scripts/events.py
@@ -4,7 +4,7 @@
 # Original author: Sebastien Bonnieux
 # Current maintainer: Dr. Joel D. Simon (JDS)
 # Contact: jdsimon@alumni.princeton.edu | joeldsimon@gmail.com
-# Last modified by JDS: 13-Oct-2020, Python 2.7.15, Darwin-18.7.0-x86_64-i386-64bit
+# Last modified by JDS: 16-Oct-2020, Python 2.7.15, Darwin-18.7.0-x86_64-i386-64bit
 
 import setup
 import os
@@ -103,6 +103,8 @@ class Event:
     requested = None
     station_loc = None
     drift_correction = None
+    can_generate_mseed = False
+    can_generate_sac = False
 
     def __init__(self, mmd_data_name, header, binary):
         self.mmd_data_name = mmd_data_name
@@ -319,16 +321,19 @@ class Event:
         plt.close()
 
     def to_mseed(self, export_path, station_number, force_without_loc=False):
-        # Check if file exist
-        export_path_msd = export_path + self.get_export_file_name() + ".mseed"
-        if os.path.exists(export_path_msd):
-            return
-
         # Check if the station location has been calculated
         if self.station_loc is None and not force_without_loc:
             #print self.get_export_file_name() + ": Skip mseed generation, wait the next ascent to compute location"
             return
 
+        # This binary data attached to this event may be converted to miniSEED
+        self.can_generate_mseed = True
+
+        # Check if file exist
+        export_path_msd = export_path + self.get_export_file_name() + ".mseed"
+        if os.path.exists(export_path_msd):
+            return
+
         # Get stream object
         stream = self.get_stream(export_path, station_number, force_without_loc)
 
@@ -336,16 +341,19 @@ class Event:
         stream.write(export_path_msd, format='MSEED')
 
     def to_sac(self, export_path, station_number, force_without_loc=False):
-        # Check if file exist
-        export_path_sac = export_path + self.get_export_file_name() + ".sac"
-        if os.path.exists(export_path_sac):
-            return
-
         # Check if the station location has been calculated
         if self.station_loc is None and not force_without_loc:
             print self.get_export_file_name() + ": Skip sac generation, wait the next ascent to compute location"
             return
 
+        # This binary data attached to this event may be converted to SAC
+        self.can_generate_sac = True
+
+        # Check if file exist
+        export_path_sac = export_path + self.get_export_file_name() + ".sac"
+        if os.path.exists(export_path_sac):
+            return
+
         # Get stream object
         stream = self.get_stream(export_path, station_number, force_without_loc)
 
