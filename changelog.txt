Current:
*v1.3.0: 09-Oct-2020
  -- Add argument parsing: --server [server path] --processed [processed path]
  -- Make main.py GPS concatenation more pythonic with list comprehension
  -- GPS method get_gps_list attaches .LOG and .MER file names, as opposed to
     just the strings "log" and "mer"
  -- Add example detailing how code handles 10_5E79D332.MER transmission failure

Previous:
* v1.2.0: 01-Oct-2020
  -- Spell out, explicitly, which .MER file contributed event binary data in
     each Event instance
  -- Spell out, explicitly, which .MER file was used for dive event metadata (GPS
     fixes) via its environment (the header that precedes event data) in each
     Dive instance
  -- Make relationship between event data (.MER binary) and dive location (.MER
     environment and .LOG data) explicit via
     attach_mmd_is_complete_to_dive_events() method because every dive generates
     1 LOG and maybe 0, 1, or multiple .MER files and the binary data in any
     give .MER file does not necessarily correspond to that same file's
     environment
  -- Add verification of complete transmission of .MER file before attempting to
     generate SAC/mSEED
  -- Add printout detailing the connection successive dives and their .MER and
     .LOG files; this follows from dives.attach_mmd_is_complete_to_dive_events--
     see those printouts in dives.py to understand how various dives and events
     relate, and how the latter list may be pulled from multiple text files
  -- Modify Events globbing to truly allow passage of single .MER in
     tool_invert_mer.py, and update the latter to force the generation of
     SAC/mSEED files with an incomplete .MER file because validating a .MER file
     requires the associated .LOG (for number of bytes written), which is not
     available to tool_invert_mer.py
  -- Attach hdop, vdop to GPS when available
  -- Write list of all GPS data from .LOG / .MER -- currently in main.py; this
     logic should probably be pulled out into gps.py at some point

* v1.1.0: 17-Sep-2020
  -- GPS clock-drift correction added to USER3 variable in SAC header
  -- Packaged version number stored in setup.py and imported in scripts
  -- Fixed tool_invert_mer.py fixed, which now allows flexible path declarations/
     future: apply events.correct_clock_drift?
  -- Forced directory change into $AUTOMAID/scripts/bin/ in
     events.invert_transform to patch issue I0.2.0_1 where the scripts do not
     allow fullpath inputs
  -- Removed local server/ and processed/ directories: those go in $MERMAID

* v1.0.0: 11-Sep-2020
  -- Fix P-25.vit gps.linear_interpolation crash with early return in dives.py

* v0.3.0: 11-Sep-2020
  -- Add version to "kuser0" SAC header field
  -- Print .MER (if any) that accompanies each .LOG to stdout

* v0.2.0: 09-Sep-2020
  -- Make paths relative to $MERMAID and $AUTOMAID
  -- Known issues (I0.2.0_1): icdf24_v103_test and icdf24_v103ec_test in
     $AUTOMAID/scripts/bin (after running make in $AUTOMAID/scripts/src/[V103
     and V103ec] and moving them) do not run with fullpaths:
     Y: "icdf24_v103_test 5 1 wtcoeffs"
     N: "$AUTOMAID/scripts/bin/icdf24_v103_test 5 1 $AUTOMAID/scripts/bin/wtcoeffs"

* v0.1.0: 08-Sep-2020
  -- Base version, with minor modifications from Seb's listed in remote_diffs/
     (that directory of plain text files is slated for removal, but may be
     retrieved from that release)
  -- Known issues(I0.1.0_1): P-25.vit does not process (GPS issue);

Todo:
  -- Reconcile READMEs across different remotes
