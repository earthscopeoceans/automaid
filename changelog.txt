Current:
*v2.1.0: 02-Nov-2020
  -- Attach interpolation dictionary to every GPS instance so that interpolation
     parameters may be teased apart; write output *gps_interpolation.txt file to
     explain the drifts computed in the three regimes (descent, drift, ascent)
  -- Swap default class attributes for default instance attributes to avoid
     unintended global overwrite of non-assigned class attributes:
	 class SomeClass:
	     cls_attr = foo
		  def __init__():
		      ...
	 class SomeClass:
	     def __init__():
		 self.inst_attr = foo

  -- Allow abbreviated '-s' and '-p' optional input flags

  -- Rewrite interpolations in Dives and GPS in plain English -- this does not
     change the algorithm at all (but it makes it much more verbose but
     hopefully more readable and easier to debug?)
  -- Add writing of last_dive_pressure_offset.txt to alert when (corrected)
     external pressure is near/beyond the 300 mbar limit
  -- Add writing of XXX.XXX-P-??_dives.txt, which contains the same info as the
     printout that ends each float loop
  -- Attach .mer_environment_name and .mer_binary_name to each Event instance
     (which is also contained in the encapsulating Dive instance, but this make
     access more explicit), and change .mmd_data_name to .mer_binary_name to
     distinguish it from the .MER file associated with the environment (which
     may be different)
  -- Modify attribute names (e.g. "self.mmd..." for "self.mer..") for , which
     should be fine at this point because automaid is still self contained, as
     far as I'm aware

Previous:
*v2.0.0: 16-Oct-2020
  -- Utilize complete GPS list from both .LOG and .MER files to compute
     interpolated station locations (previously, the .MER was searched first, and
     if no GPS fixes existed there, the .LOG was used)
  -- Explicitly separate newly-combined .LOG/.MER GPS list into "before_dive",
     "after dive" etc. sublists rather than relying on list-slicing that may or
     may not be valid depending transmission state (Iridium/GPS failures and
     drops can result in incomplete files, meaning that the final GPS point,
     which should be after the dive, may not have been transmitted,
     potentially(?) resulting in the actual final GPS point in the file being
     before the dive)
  -- Add header lines to output GPS text files
  -- Generates 45 additional SAC/mSEED files for 16 Princeton floats due to
     increased number of GPS fixes now attached to each Dive instance and
     available for GPS interpolation

*v1.4.0: 14-Oct-2020
  -- Check the actual byte length of each event contained in every .MER file,
     and only process those that are validated to be completed (this overrides
     the more blunt-force approach of v1.2.0, which skipped entire .MER files
     if they were incomplete)
  -- Clear data (the files 'wtcoeffs' and 'wtcoeffs.icdf24_?') written to disk
     with the script 'icdf24_v103(ec)_test' for each event processed; the data
     are read from disk as the event's data which means that if the script
     failed (which it previously did silently), and no new data were written,
     the old data would be read in and associated with the next event that came
     along, resulting in the same data being associated incorrectly with
     incomplete events
  -- Add user-specific default paths to argparse --help printout
  -- Fix relative/absolute argument parsing in tool_invert_mer.py

*v1.3.0: 09-Oct-2020
  -- Add argument parsing: --server [server path] --processed [processed path]
  -- Make main.py GPS concatenation more pythonic with list comprehension
  -- GPS method get_GPS_list attaches .LOG and .MER file names, as opposed to
     just the strings "log" and "mer"
  -- Add example detailing how code handles 10_5E79D332.MER transmission failure

* v1.2.0: 01-Oct-2020
  -- Spell out, explicitly, which .MER file contributed event binary data in
     each Event instance
  -- Spell out, explicitly, which .MER file was used for dive event metadata (GPS
     fixes) via its environment (the header that precedes event data) in each
     Dive instance
  -- Make relationship between event data (.MER binary) and dive location (.MER
     environment and .LOG data) explicit via
     attach_mmd_is_complete_to_dive_events() method because every dive generates
     1 LOG and maybe 0, 1, or multiple .MER files and the binary data in any
     give .MER file does not necessarily correspond to that same file's
     environment
  -- Add verification of complete transmission of .MER file before attempting to
     generate SAC/mSEED
  -- Add printout detailing the connection successive dives and their .MER and
     .LOG files; this follows from dives.attach_mmd_is_complete_to_dive_events--
     see those printouts in dives.py to understand how various dives and events
     relate, and how the latter list may be pulled from multiple text files
  -- Modify Events globbing to truly allow passage of single .MER in
     tool_invert_mer.py, and update the latter to force the generation of
     SAC/mSEED files with an incomplete .MER file because validating a .MER file
     requires the associated .LOG (for number of bytes written), which is not
     available to tool_invert_mer.py
  -- Attach hdop, vdop to GPS when available
  -- Write list of all GPS data from .LOG / .MER -- currently in main.py; this
     logic should probably be pulled out into GPS.py at some point

* v1.1.0: 17-Sep-2020
  -- GPS clock-drift correction added to USER3 variable in SAC header
  -- Packaged version number stored in setup.py and imported in scripts
  -- Fixed tool_invert_mer.py fixed, which now allows flexible path declarations/
     future: apply events.correct_clock_drift?
  -- Forced directory change into $AUTOMAID/scripts/bin/ in
     events.invert_transform to patch issue I0.2.0_1 where the scripts do not
     allow fullpath inputs
  -- Removed local server/ and processed/ directories: those go in $MERMAID

* v1.0.0: 11-Sep-2020
  -- Fix P-25.vit GPS.linear_interpolation crash with early return in dives.py

* v0.3.0: 11-Sep-2020
  -- Add version to "kuser0" SAC header field
  -- Print .MER (if any) that accompanies each .LOG to stdout

* v0.2.0: 09-Sep-2020
  -- Make paths relative to $MERMAID and $AUTOMAID
  -- Known issues (I0.2.0_1): icdf24_v103_test and icdf24_v103ec_test in
     $AUTOMAID/scripts/bin (after running make in $AUTOMAID/scripts/src/[V103
     and V103ec] and moving them) do not run with fullpaths:
     Y: "icdf24_v103_test 5 1 wtcoeffs"
     N: "$AUTOMAID/scripts/bin/icdf24_v103_test 5 1 $AUTOMAID/scripts/bin/wtcoeffs"

* v0.1.0: 08-Sep-2020
  -- Base version, with minor modifications from Seb's listed in remote_diffs/
     (that directory of plain text files is slated for removal, but may be
     retrieved from that release)
  -- Known issues(I0.1.0_1): P-25.vit does not process (GPS issue)

Todo:
  -- Reconcile READMEs across different remotes
